!function(){"use strict";function e(e,n){var r,i;for(r in n)i=n[r],e[r]=i;return e}function n(){return{bower:{jsonFile:"bower.json",pkgDir:"bower_components",defaultMain:"./index.js"},npm:{jsonFile:"package.json",pkgDir:"node_modules",defaultMain:"./index.js"}}}function r(e){return new t.PluginError("gulp-srcdeps",e)}function i(n,r){var i,o=n.dependencies||{},s=[];r&&(o=e(o,n.devDependencies||{}));for(i in o)s.push(i);return s}function o(e,n,r,i,o){var s={};return e.map(function(e){var u=require(c.join(n,e,r));s[e]=o[e]||u.main||i,s[e]=c.join(n,e,s[e]),a.existsSync(s[e])||p(t.colors.yellow("Package:"),t.colors.green(e),t.colors.yellow("has no valid main path. Recommend override."))}),s}function s(e,s){var u,t,p=n()[e],l=[],d={};if(!p)throw r('Packager "'+e+'" not supported.');if(u=c.join(process.cwd(),p.jsonFile),!a.existsSync(u))throw r('Packager "'+e+'" missing JSON file "'+p.jsonFile+'". ('+u+")");if(t=c.join(process.cwd(),p.pkgDir),!a.existsSync(t))throw r('Packager "'+e+'" missing package directory "'+p.pkgDir+'". ('+t+")");return l=i(require(u),s.includeDevPackages),d=o(l,t,p.jsonFile,p.defaultMain,s.overrides)}var u=require("gulp"),t=require("gulp-util"),c=require("path"),a=require("fs"),p=function(){t.log.apply(this,arguments)};module.exports=function(n){var r,i,o={packagers:["npm","bower"],overrides:{},includeDevPackages:!1,logOutput:!1},t={},c=[];n=e(o,n),n.logOutput||(p=function(){}),n.packagers.map(function(r){t=e(t,s(r,n))});for(r in t)i=t[r],i&&c.push(i);return p("srcdep pulling in "+c.length+" dependencies..."),u.src(c)}}();
!function(){"use strict";function e(e,n){var r,i;for(r in n)i=n[r],e[r]=i;return e}function n(){return{bower:{jsonFile:"bower.json",pkgDir:"bower_components"},npm:{jsonFile:"package.json",pkgDir:"node_modules"}}}function r(e){return new u.PluginError("gulp-srcdeps",e)}function i(n,r){var i,o=n.dependencies||{},s=[];r&&(o=e(o,n.devDependencies||{}));for(i in o)s.push(i);return s}function o(e,n,r,i,o){var s={};return e.map(function(e){var i=require(t.join(n,e,r));s[e]=o[e]||i.main||"dist/"+e+".min.js",s[e]=t.join(n,e,s[e]),a.existsSync(s[e])||l(u.colors.yellow("Package:"),u.colors.green(e),u.colors.yellow("has no valid main path. Recommend override.")),-1==s[e].indexOf(".min.js")&&l(u.colors.yellow("Package: "),u.colors.green(e),u.colors.yellow("is pulling in a non-minified dist file. Recommend checking to ensure correct file inclusion, may need override..."))}),s}function s(e,s){var c,u,l=n()[e],p=[],g={};if(!l)throw r('Packager "'+e+'" not supported.');if(c=t.join(process.cwd(),l.jsonFile),!a.existsSync(c))throw r('Packager "'+e+'" missing JSON file "'+l.jsonFile+'". ('+c+")");if(u=t.join(process.cwd(),l.pkgDir),!a.existsSync(u))throw r('Packager "'+e+'" missing package directory "'+l.pkgDir+'". ('+u+")");return p=i(require(c),s.includeDevPackages),g=o(p,u,l.jsonFile,l.defaultMain,s.overrides)}var c=require("gulp"),u=require("gulp-util"),t=require("path"),a=require("fs"),l=function(){u.log.apply(this,arguments)};module.exports=function(n){var r,i,o={packagers:["npm","bower"],overrides:{},includeDevPackages:!1,logOutput:!1},u={},t=[];n=e(o,n),n.logOutput||(l=function(){}),n.packagers.map(function(r){u=e(u,s(r,n))});for(r in u)i=u[r],i&&t.push(i);return l("srcdep pulling in "+t.length+" dependencies..."),c.src(t)}}();
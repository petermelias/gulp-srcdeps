"use strict";function _mergeObjects(e,r){var n,i;for(n in r)i=r[n],e[n]=i;return e}function _packagers(){return{bower:{jsonFile:"bower.json",pkgDir:"bower_components",defaultMain:"./index.js"},npm:{jsonFile:"package.json",pkgDir:"node_modules",defaultMain:"./index.js"}}}function _error(e){return new util.PluginError("gulp-srcdeps",e)}function _pullDependencies(e,r){var n,i=e.dependencies||{},o=[];r&&(i=_mergeObjects(i,e.devDependencies||{}));for(n in i)o.push(n);return o}function _resolveMains(e,r,n,i,o){var s={};return e.map(function(e){var t=require(path.join(r,e,n));s[e]=o[e]||t.main||i,s[e]=path.join(r,e,s[e]),fs.existsSync(s[e])||_log(util.colors.yellow("Package:"),util.colors.green(e),util.colors.yellow("has no valid main path. Recommend override."))}),s}function _scanPkgr(e,r){var n,i,o=_packagers()[e],s=[],t={};if(!o)throw _error('Packager "'+e+'" not supported.');if(n=path.join(process.cwd(),o.jsonFile),!fs.existsSync(n))throw _error('Packager "'+e+'" missing JSON file "'+o.jsonFile+'". ('+n+")");if(i=path.join(process.cwd(),o.pkgDir),!fs.existsSync(i))throw _error('Packager "'+e+'" missing package directory "'+o.pkgDir+'". ('+i+")");return s=_pullDependencies(require(n),r.includeDevPackages),t=_resolveMains(s,i,o.jsonFile,o.defaultMain,r.overrides)}var gulp=require("gulp"),util=require("gulp-util"),path=require("path"),fs=require("fs"),_log=function(){util.log.apply(this,arguments)};module.exports=function(e){var r,n,i={packagers:["npm","bower"],overrides:{},includeDevPackages:!1,logOutput:!1},o={},s=[];e=_mergeObjects(i,e),e.logOutput||(_log=function(){}),e.packagers.map(function(r){o=_mergeObjects(o,_scanPkgr(r,e))});for(r in o)n=o[r],n&&s.push(n);return _log("srcdep pulling in "+s.length+" dependencies..."),gulp.src(s)};
!function(){"use strict";function e(e,r){var n,o;for(n in r)o=r[n],e[n]=o;return e}function r(){return{bower:{jsonFile:"bower.json",pkgDir:"bower_components"},npm:{jsonFile:"package.json",pkgDir:"node_modules"}}}function n(e){return"[object Array]"===Object.prototype.toString.call(e)}function o(r,n){var o,i=r.dependencies||{},t=[];n&&(i=e(i,r.devDependencies||{}));for(o in i)t.push(o);return t}function i(e,r){var n=[new RegExp(r+".min.js$"),new RegExp(r+".js$")],o=[],i=u.readdirSyncRecursive(a.join(e,r));return i.forEach(function(e){n.forEach(function(r,n){e.match(r)&&(o[n]=e)})}),o.filter(function(e){return"undefined"!=typeof e}).shift()}function t(e,r,o,t,c){var u=function(e,r){return s.existsSync(e)?!0:(f("Package ( "+r+" ) file at "+e+" does not exist."),!1)},p=function(e,n){return e=a.resolve(r,n,e),u(e,n),e},d=function(e){var o=c[e]||i(r,e);return o?n(o)?o.forEach(function(r,n,o){o[n]=p(r,e)}):o=p(o,e):f('Package "'+e+'" has no valid paths. Recommend override.'),o},g={};return e.forEach(function(e){g[e]=d(e)}),g}function c(e,n){var i,c,u=r()[e],f=[];if(!u)throw new Error('Packager "'+e+'" not supported.');if(i=a.join(n.rootDir,u.jsonFile),!s.existsSync(i))throw new Error('Packager "'+e+'" missing JSON file "'+u.jsonFile+'". ('+i+")");if(c=a.join(n.rootDir,u.pkgDir),!s.existsSync(c))throw new Error('Packager "'+e+'" missing package directory "'+u.pkgDir+'". ('+c+")");return f=o(require(i),n.includeDevPackages),t(f,c,u.jsonFile,u.defaultMain,n.overrides)}var u=require("wrench"),a=require("path"),s=require("fs"),f=function(){console.log.apply(this,arguments)};module.exports=function(r){var o,i,t,u={packagers:["npm","bower"],overrides:{},includeDevPackages:!1,logOutput:!1,rootDir:process.cwd(),order:[],ignore:[]},s=[],p={};r=e(u,r),r.rootDir=a.resolve(r.rootDir),r.logOutput||(f=function(){}),r.packagers.forEach(function(n){p=e(p,c(n,r))});for(o in p)r.ignore.indexOf(o)>-1?f("Ignoring: "+o):(i=p[o],i?(t=r.order.indexOf(o),t>-1?"undefined"==typeof s[t]?s[t]=i:Array.prototype.splice.apply(s,[t,0].concat(i)):n(i)?s=s.concat(i):s.push(i)):f("Path for "+o+" is empty, skipping."));return f("Found "+s.length+" dependent files."),s}}();